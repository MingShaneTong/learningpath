/*
 * Learning Path Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using LearningPath.Gateway.Attributes;
using LearningPath.Gateway.Handlers;
using LearningPath.Gateway.Models;

namespace LearningPath.Gateway.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UsersApiController : ControllerBase
    { 
        private readonly IUsersApiHandler _handler;
        
        public UsersApiController(IUsersApiHandler handler)
        {
            _handler = handler;
        }

        /// <summary>
        /// Get all users
        /// </summary>
        /// <remarks>Retrieves a list of all users</remarks>
        /// <param name="limit">Maximum number of users to return</param>
        /// <param name="active">Filter by active status</param>
        /// <response code="200">List of users retrieved successfully</response>
        /// <response code="400">Bad request - invalid parameters</response>
        [HttpGet]
        [Route("/v1/users")]
        [ValidateModelState]
        [SwaggerOperation("UsersGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<User>), description: "List of users retrieved successfully")]
        public virtual IActionResult UsersGet([FromQuery (Name = "limit")][Range(1, 100)]int? limit, [FromQuery (Name = "active")]bool? active)
        {
            return _handler.UsersGet(limit, active);
        }
    }
}
